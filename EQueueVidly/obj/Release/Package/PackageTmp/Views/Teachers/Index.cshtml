\@using Microsoft.AspNet.Identity
@model EQueueVidly.ViewModels.TeacherScheduleVM

@{
    ViewBag.Title = "title";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@* Teacher/Index/Id*@
<h1></h1>

<div class="row">
    <div class="panel panel-success">
        <div class="panel-heading">
            <div class="row flex-override">
                <div style="padding-left: 15px">
                    <img class=" img-circle img-responsive"
                     src="@Url.Action("Photo", "Account", new {UserId = Model.AccountId})" style="padding: 3px auto" width="50px" height="50px" />
                </div>
                <div class="col-md-5 vertical-align-center">
                    <div class=" valign-center">
                        <h2 class="panel-title">@Model.TeacherName</h2>
                    </div>
                </div>
            </div>
            
        </div>
        <div class="panel-body">
            <div id='calendar'>

            </div>
        </div>
    </div>

</div>

  

<div id="JoinModal" class="modal" style="display: none;">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <h3 class="modal-title" id="myModalLabel">Appointment</h3>
                </div>
                <div class="modal-body">
                    <dl class="dl-horizontal">
                        <dt>Appointment title:</dt><dd id="title"></dd>
                        <dt>Beginning:</dt><dd id="start"></dd>
                        <dt>Finish:</dt><dd id="end"></dd>
                        <dt>Time limit</dt><dd id="limit"></dd>
                        <dt>Total capacity:</dt><dd id="capacity"></dd>
                        <dt>Items in queue:</dt><dd id="queueItems"></dd>
                    </dl>
                </div>
                <div class="modal-footer" id="modal-footer">
                    <button type="button" id="btnPopupCancel" data-dismiss="modal" class="btn">Cancel</button>
                    <button type="button" id="btnPopupJoin" data-dismiss="modal" class="btn btn-primary">Join</button>
                </div>
            </div>

        </div>

    </div>

@section scripts
{
    <script>
        var isTeacher = false;
        @if (User.IsInRole("Teacher"))
        {
            @:isTeacher = true;
        }
        var selectedEvent, isMember;
        var userId = '@User.Identity.GetUserId()';

        function getFormattedDate(date) { // get date in needed format
            var today = new Date(date);
            var dd = today.getDate();
            var mm = today.getMonth(); //January is 0!
            var hh = today.getHours();
            var min = today.getMinutes();
            if (hh == 0)
                hh = '00';
            if (min == 0)
                min = '00';
            var yyyy = today.getFullYear();
            if (dd < 10) {
                dd = '0' + dd
            }

            var month = new Array();
            month[0] = "Jan";
            month[1] = "Feb";
            month[2] = "Mar";
            month[3] = "Apr";
            month[4] = "May";
            month[5] = "Jun";
            month[6] = "Jul";
            month[7] = "Aug";
            month[8] = "Sep";
            month[9] = "Oct";
            month[10] = "Nov";
            month[11] = "Dec";

            var today = dd + '/' + month[mm] + '/' + yyyy + ' ' + hh + ':' + min;
            return today;
        }

        function IsMember(event) { // check if current user is already joined to the appointment
            if (!isTeacher) {
                var dataRow = { 'userId': userId, 'eventId': event.id };
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("IsAppointmentMember", "Attendees")',
                    data: dataRow,
                    success: function (response) {
                        if (response == 'True') {
                            isMember = true;
                        } else {
                            isMember = false;
                        }
                    }
                });
            } 
        }

        function IsFull(event) { // check wether appointment full or not
            return (event.queueIiems == event.capacity);
        }

        $('#btnPopupJoin').click(function() {
            var dataRow = {
                'AppointmentId': selectedEvent.id
            }
            if (isMember) {
                $("#calendar").fullCalendar('renderEvent', selectedEvent, true);
                $('#calendar').fullCalendar('refetchEvents');
                toastr.error("You cant join twice!");
            } else {
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("JoinEvent", "Attendees")',
                    dataType: "json",
                    contentType: "application/json",
                    data: dataRow,
                    success: function (response) {
                        if (response) {
                            $("#calendar").fullCalendar('renderEvent', selectedEvent, true);
                            $('#calendar').fullCalendar('refetchEvents');
                            toastr.success('You successfully joined to this appointment!');
                        } else {
                            toastr.error("Some error accured!!");
                        }
                    }
                });
            }


        });

        $(document).ready(function() {

            $('#calendar').fullCalendar({
                header: {
                    left: 'today prev,next ',
                    center: 'title',
                    right: 'month,agendaWeek,agendaDay'
                },
                defaultView: 'month',
                editable: false,
                allDaySlot: false,
                selectable: true,
                slotMinutes: 15,
                timezone: 'local',
                events: '@Url.Action("GetAppointmentsForTeacher", "Appointments", new {Id = Model.TeacherId})',
                eventClick: function(calEvent, jsEvent, view) {
                    selectedEvent = calEvent;
                    isMember = IsMember(calEvent);
                    var evenetStart = new Date(calEvent.start);
                    evenetStart = evenetStart.getTime();
                    var now = new Date().getTime();
                    if ((!userId) || (evenetStart <= now) || IsFull(calEvent) || isTeacher) {
                        $('#modal-footer').hide();
                    } else {
                        $('#modal-footer').show();
                    }

                    $('#JoinModal').modal();
                    $('#title')[0].innerHTML = calEvent.title;
                    $("#start")[0].innerHTML = getFormattedDate(calEvent.start);
                    $("#end")[0].innerHTML = getFormattedDate(calEvent.end);
                    $("#limit")[0].innerHTML = calEvent.timeLimit;
                    $("#capacity")[0].innerHTML = calEvent.capacity;
                    $("#queueItems")[0].innerHTML = calEvent.queueIiems;


                },
                eventRender: function (event, element) {

                },
            });
        });
    </script>
}
