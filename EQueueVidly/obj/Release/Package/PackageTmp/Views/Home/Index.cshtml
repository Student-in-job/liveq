@using EQueueVidly.Models
@using EQueueVidly.Helpers
@model PagedList.IPagedList<Teacher>
@{
    ViewBag.Title = "Home Page";
}

@section styles{
    <link rel="Stylesheet" href="@Href("~/Content/custom/teachers-grid.css")" />
}

@*Header*@
<div class="row">
    <div class="col-lg-12 page-header ">
        <div class="col-lg-6">
            <h1 class="dark-text" style="margin-top: inherit;">
                Our Teachers
            </h1>
        </div>
        <div class="col-lg-4 pull-right">
            <div class="bs-component"></div>
            <div class="form-group">
                <div class="input-group">
                    <span class="input-group-addon"><i class="fa fa-search" aria-hidden="true"></i></span>
                    <input type="text" class="form-control" placeholder="Teacher name" id="SearchString" name="SearchString">
                    <span class="input-group-btn">
                        <button class="btn btn-success" type="button" id="btnSearch">search</button>
                    </span>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row" id="teachers-container">
    @Html.Partial("TeacherList", Model)

</div>




@section scripts
{

    <script>
        // Adding popstate event listener to handle browser back button
        window.addEventListener("popstate", function (e) {
            $.ajax({
                url: location.href,
                success: function (result) {
                    $('#teachers-container').html(result);
                }
            });
        });

        function ChangeUrl(page, url) {
            if (typeof (history.pushState) != "undefined") {
                var obj = { Page: page, Url: url };
                history.pushState(null, obj.Page, obj.Url);
            } else {
                alert("Browser does not support HTML5.");
            }
        }

        function getUrlVars() {
            var vars = [], hash;
            var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
            for (var i = 0; i < hashes.length; i++) {
                hash = hashes[i].split('=');
                vars.push(hash[0]);
                vars[hash[0]] = hash[1];
            }
            return vars;
        }

        function search() {
            $.ajax({
                url: "@Url.Action("Index","Home")" + "Home/Index?searchString=" + $('#SearchString').val(),
                success: function (result) {
                    ChangeUrl("index", "@Url.Action("Index","Home")" + "Home/Index?searchString=" + $('#SearchString').val());
                    $('#teachers-container').html(result);
                }
            });
        }

        $(function () {
            $("#btnSearch").click(function () {
                search();
            });

            $("#SearchString").keypress(function (e) {
                if (e.keyCode == 13) {
                    search();
                }
            });
            $('body').on('click', '#teachers-container .pagination a', function (event) {
                event.preventDefault();
                console.log('page');
                var searchString = $('#SearchString').val();
                if (searchString == undefined || searchString == '') {
                    searchString = '';
                } else {
                    searchString = '&searchString=' + searchString;
                }
                var url = $(this).attr('href') + searchString;
                console.log(url);
                $.ajax({
                    url: url,
                    success: function (result) {
                        ChangeUrl('index', url);
                        $('#teachers-container').html(result);
                    }
                });
            });

        });

        $(document).ready(function() {
            var teachers = $("#teachers").DataTable({
                ajax: {
                    url: "/EQueueVidly/api/teachers",
                    dataSrc: ""
                },
                columns: [
                    {
                        data: "firstName",
                        render: function(data, type, teacher) {
                            return "<a href='@Url.Action("Index","Teachers")/index/" + teacher.teacherId + "'>" + teacher.firstName + " " + teacher.lastName + "</a>";/**/
                            
                        }
                    }
                ]
            });
        });
    </script>
}
